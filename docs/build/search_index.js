var documenterSearchIndex = {"docs":
[{"location":"#Documentation","page":"Documentation","title":"Documentation","text":"","category":"section"},{"location":"#Introduction","page":"Documentation","title":"Introduction","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"As a general scenario, we consider a Lindblad master equations denoted by,","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"mathcalLrho =fracd rhodt = -iH rho + sum_k=1^r L_k rho L_k^dagger -frac12leftL^dagger_k L_k rho right","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"We introduce p leq r counting fields N_k with weights nu_k  which lets us define the total current, ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"N(t) = sum_k nu_k N_k(t)  ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"We further define the n-resolved density matrix rho_n(t) whose trace equals the probability P(nt) = textTrleft rho_n(t) right to have accumulated n jumps at time t. Summing over the set of allowed values  mathcalN for the total charge N , we retrieve the standard density matrix, ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"rho = sum_n in mathcalN rho_n(t)","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"We now consider the Fourier transform of the n-resolved density matrix, ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"rho_chi(t) = sum_n in mathcalN e^i n chi rho_n(t)","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"Here chi is the counting field and the dynamics of rho_chi(t) is given by the generalized master equation (GME),","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"mathcalL_chi rho_chi = left(mathcalL + Delta mathcalL_chi right)rho_chi","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"where,","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"Delta mathcalL_chi = sum_k=1^p(1-e^inu_k chi) L_k rho L_k^dagger ","category":"page"},{"location":"#Functions","page":"Documentation","title":"Functions","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"fcscumulants_recursive","category":"page"},{"location":"#QuantumFCS.fcscumulants_recursive","page":"Documentation","title":"QuantumFCS.fcscumulants_recursive","text":"fcscumulants_recursive(H, J, mJ, nCum; <keyword arguments>)\n\nCalculate n-th zero-frequency cumulant of full counting statistics using a recursive scheme.\n\nArguments\n\nH: Arbitrary operator specifying the Hamiltonian.\nJ: Vector containing all jump operators which can be of any arbitrary       operator type.\nmJ: Vector containing the monitored jumps\ntol=1e-3: Tracedistance used as termination criterion.\nhmin=1e-7: Minimal time step used in the time evolution.\nrates=ones(N): Vector or matrix specifying the coefficients for the       jump operators.\nJdagger=dagger.(Jdagger): Vector containing the hermitian conjugates of the       jump operators. If they are not given they are calculated automatically.\nnu: vector of length 2*length(J) weights for each jump operator. By default down jumps, J, have weight -1 and up-jumps have weight +1.\nkwargs...: Further arguments are passed on to the ode solver.\n\n\n\n\n\n","category":"function"},{"location":"#Examples","page":"Documentation","title":"Examples","text":"","category":"section"}]
}
